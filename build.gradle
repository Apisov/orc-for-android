apply plugin: 'com.android.library'
apply plugin: 'maven'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url project.nightliesUrl
        }
    }
}


if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 15
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.google.guava:guava:18.0'
    compile 'com.microsoft.aad:adal:1.1.7'

    //TODO: Replace with new MSA SDK
    compile (group: 'com.microsoft.orc', name: 'live-auth', version: '0.14.2')
}


uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        pom {
           setGroupId project.mavenGroupId
           setArtifactId project.mavenArtifactId
           setVersion project.mavenVersion
        }
        repository (url: project.mavenRepoUrl) {
            authentication(
                 // put these values in local file ~/.gradle/gradle.properties
                 userName: project.bintrayUsername,
                 password: project.bintrayApikey
            )
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath())
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
